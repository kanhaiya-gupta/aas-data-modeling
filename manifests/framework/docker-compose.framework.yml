version: '3.8'

services:
  # Main Application (Web Interface)
  webapp:
    build:
      context: .
      dockerfile: docker/Dockerfile.webapp
    container_name: aas-webapp
    ports:
      - "5000:5000"
    volumes:
      - ./webapp:/app/webapp
      - ./output:/app/output
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - AI_RAG_URL=http://ai-rag-system:8000
      - TWIN_REGISTRY_URL=http://twin-registry:8001
      - CERTIFICATE_MANAGER_URL=http://certificate-manager:3001
      - ANALYTICS_URL=http://qi-analytics:3002
    depends_on:
      - ai-rag-system
      - twin-registry
      - certificate-manager
      - qi-analytics
    restart: unless-stopped

  # AI/RAG System
  ai-rag-system:
    build:
      context: .
      dockerfile: docker/Dockerfile.ai-rag
    container_name: ai-rag-system
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./output:/app/output
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=Neo4j123
      - QDRANT_URL=http://qdrant:6333
      - DATABASE_URL=postgresql://aasx_user:aasx_password@postgres:5432/aasx_data
      - REDIS_URL=redis://redis:6379
    depends_on:
      - neo4j
      - qdrant
      - postgres
      - redis
    restart: unless-stopped

  # Digital Twin Registry
  twin-registry:
    build:
      context: .
      dockerfile: docker/Dockerfile.twin-registry
    container_name: twin-registry
    ports:
      - "8001:8001"
    volumes:
      - ./backend/twin-registry:/app
      - ./digital-twins:/app/digital-twins
    environment:
      - DATABASE_URL=postgresql://aasx_user:aasx_password@postgres:5432/aasx_data
      - TWIN_STORAGE_PATH=/app/digital-twins
    depends_on:
      - postgres
    restart: unless-stopped

  # Certificate Manager
  certificate-manager:
    build:
      context: .
      dockerfile: docker/Dockerfile.certificate-manager
    container_name: certificate-manager
    ports:
      - "3001:3001"
    volumes:
      - ./certificates:/app/certificates
    environment:
      - DATABASE_URL=postgresql://aasx_user:aasx_password@postgres:5432/aasx_data
      - CERTIFICATE_STORAGE_PATH=/app/certificates
    depends_on:
      - postgres
    restart: unless-stopped

  # Quality Infrastructure Analytics
  qi-analytics:
    build:
      context: .
      dockerfile: docker/Dockerfile.qi-analytics
    container_name: qi-analytics
    ports:
      - "3002:3002"
    volumes:
      - ./output:/app/output
    environment:
      - DATABASE_URL=postgresql://aasx_user:aasx_password@postgres:5432/aasx_data
      - AI_RAG_URL=http://ai-rag-system:8000
    depends_on:
      - postgres
      - ai-rag-system
    restart: unless-stopped

  # Neo4j Database
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j
    environment:
      NEO4J_AUTH: neo4j/Neo4j123
      NEO4J_PLUGINS: '["apoc"]'
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: unless-stopped

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: aasx_data
      POSTGRES_USER: aasx_user
      POSTGRES_PASSWORD: aasx_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

volumes:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins:
  qdrant-data:
  postgres-data:
  redis-data: 