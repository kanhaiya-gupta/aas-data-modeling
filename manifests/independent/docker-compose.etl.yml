version: '3.8'

services:
  # ETL Pipeline - Heart of the Project
  etl-pipeline:
    build:
      context: .
      dockerfile: docker/independent/Dockerfile.etl-pipeline
    container_name: etl-pipeline
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - ETL_CONFIG_PATH=/app/scripts/config_etl.yaml
      - OUTPUT_DIR=/app/output/etl_results
      - LOG_LEVEL=INFO
    restart: "no"

  # Knowledge Graph System
  knowledge-graph:
    build:
      context: .
      dockerfile: docker/Dockerfile.knowledge-graph
    container_name: knowledge-graph
    ports:
      - "8004:8004"
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
      - ./data:/app/data
    environment:
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=Neo4j123
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    depends_on:
      - neo4j
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Neo4j Database (Required for Knowledge Graph)
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j-core
    environment:
      NEO4J_AUTH: neo4j/Neo4j123
      NEO4J_PLUGINS: '["apoc"]'
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474/browser/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins: 